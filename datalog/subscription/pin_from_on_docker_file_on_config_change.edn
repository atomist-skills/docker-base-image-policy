[:find
 (pull ?image [:db/id
               :schema/entity-type
               {:docker.image/repository [:docker.repository/host
                                          (:docker.repository/repository
                                            :as
                                            :name)]}
               :docker.image/digest
               :docker.image/tags
               :docker.image/ports
               :docker.image/env
               {:docker.manifest-list/repository [:docker.repository/host
                                                  (:docker.repository/repository
                                                    :as
                                                    :name)]}
               :docker.manifest-list/digest
               :docker.manifest-list/tags
               {:docker.manifest-list/images [:docker.image/digest
                                              :docker.image/ports
                                              :docker.image/env
                                              :docker.image/tags
                                              {(:docker.platform/_image :as :docker.platform/platform) [:docker.platform/os
                                                                                                        :docker.platform/variant
                                                                                                        :docker.platform/architecture]}]}])
 (pull
   ?commit
   [:schema/entity-type
    {(:git.ref/_commit :as :git.ref/refs) [:git.ref/name
                                           :git.ref/type]}
    {:git.commit/repo [:git.repo/name
                       :git.repo/default-branch
                       {:git.repo/org [:github.org/installation-token
                                       :git.org/name
                                       (:git.org/provider-base-url
                                         :as
                                         :base-url)
                                       :git.provider/url]}]}
    {:git.commit/author [:git.user/name
                         :git.user/login
                         {:git.user/emails [:email.email/address]}]}
    :git.commit/sha
    :git.commit/message])
 (pull ?docker-file [:schema/entity-type
                     :docker.file/path
                     {(:docker.file.line/_file :as :lines) [:docker.file.line/number
                                                            :docker.file.line/instruction
                                                            :docker.file.line/args-map
                                                            :docker.file.line/args-array
                                                            :docker.file.line/args-string
                                                            :docker.file.from/tag
                                                            :docker.file.from/digest
                                                            {:docker.file.from/image [:docker.image/digest
                                                                                      :docker.image/tags
                                                                                      :docker.image/ports
                                                                                      :docker.image/env
                                                                                      {:docker.image/docker-file [:docker.file/path
                                                                                                                  {:docker.file/commit [{:git.commit/repo [:git.repo/name
                                                                                                                                                           :git.repo/default-branch
                                                                                                                                                           {:git.repo/org [:github.org/installation-token
                                                                                                                                                                           :git.org/name
                                                                                                                                                                           (:git.org/provider-base-url
                                                                                                                                                                             :as
                                                                                                                                                                             :base-url)
                                                                                                                                                                           :git.provider/url]}]}
                                                                                                                                        {:git.commit/author [:git.user/name
                                                                                                                                                             :git.user/login
                                                                                                                                                             {:git.user/emails [:email.email/address]}]}
                                                                                                                                        :git.commit/sha
                                                                                                                                        :git.commit/message]}]}]}
                                                            {:docker.file.from/manifest-list [:docker.manifest-list/digest
                                                                                              :docker.manifest-list/tags
                                                                                              {:docker.manifest-list/images [:docker.image/digest
                                                                                                                             :docker.image/tags
                                                                                                                             :docker.image/ports
                                                                                                                             :docker.image/env
                                                                                                                             {(:docker.platform/_image :as :docker.platform/platform) [:docker.platform/os
                                                                                                                                                                                       :docker.platform/variant
                                                                                                                                                                                       :docker.platform/architecture]}]}]}
                                                            {:docker.file.from/repository [:docker.repository/host
                                                                                           (:docker.repository/repository
                                                                                             :as
                                                                                             :name)]}]}])
 (pull
   ?docker-registry
   [:db/id
    :schema/entity-type
    :docker.registry/type
    :docker.registry/secret
    :docker.registry/username
    :docker.registry/server-url])
 :in $ $before-db %
 :where
 (tx-config-value "repoFilter" ?parameter)

 ;; check pinning pull requests are enabled
 (get-config-value "pinningPullRequests" true true)

 (or-join [?docker-registry]
   (capability-configuration
     "atomist"
     "DockerRegistry"
     "analysis"
     ?docker-registry)
   [(ground "empty") ?docker-registry])

 ;; head commits
 [?ref :git.ref/commit ?commit]
 (is-default-branch? ?ref)

 ;; check repo filter
 [?commit :git.commit/repo ?repo]
 (repo-selected? ?repo)

 ;; get docker.file and git.commit
 [?docker-file :docker.file/commit ?commit]
 [?from-line :docker.file.line/file ?docker-file]

 (or-join [?from-line ?digest]
   (and
     [?from-line :docker.file.from/image ?base-image]
     [?base-image :docker.image/digest ?digest])
   (and
     [?from-line :docker.file.from/manifest-list ?manifest-list]
     [?manifest-list :docker.manifest-list/digest ?digest]))

 ;; either the digest is not present in the dockerfile, or it's a different one
 (or-join [?from-line ?digest]
   [(missing? $ ?from-line :docker.file.from/digest)]
   (not [?from-line :docker.file.from/digest ?digest]))

 ;; check that all from lines have images or manifest-list
 [(q (quote [:find (count ?other-from-line)
             :in $ ?docker-file
             :where
             [?other-from-line :docker.file.line/file ?docker-file]
             [?other-from-line :docker.file.line/instruction "FROM"]
             ])
    $ ?docker-file)
  [[?total-from-count]]]

 [(q (quote [:find (count ?other-from-line)
             :in $ ?docker-file
             :where
             [?other-from-line :docker.file.line/file ?docker-file]
             [?other-from-line :docker.file.line/instruction "FROM"]
             (or-join [?other-from-line]
               [?other-from-line :docker.file.from/image _]
               [?other-from-line :docker.file.from/manifest-list _]
               [?other-from-line :docker.file.from/digest _]
               (and
                 [?other-from-line :docker.file.from/repository ?repository]
                 [?repository :docker.repository/repository "scratch"]
                 [?repository :docker.repository/host "hub.docker.com"]))
             ])
    $ ?docker-file)
  [[?from-count]]]

 [(= ?total-from-count ?from-count)]

 ;; resolve all images and manifest-list currently used in FROM lines
 [?other-from-line :docker.file.line/file ?docker-file]
 [?other-from-line :docker.file.line/instruction "FROM"]
 (or-join [?other-from-line ?image]
   (and
     [?other-from-line :docker.file.from/digest ?digest]
     [?image :docker.image/digest ?digest])
   (and
     [?other-from-line :docker.file.from/digest ?digest]
     [?image :docker.manifest-list/digest ?digest])
   (and
     [(missing? $ ?other-from-line :docker.file.from/digest)]
     [(ground "scratch") ?image])
   )]
