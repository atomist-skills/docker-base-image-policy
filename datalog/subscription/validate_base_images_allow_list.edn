[:find
 (pull
   ?commit
   [:schema/entity-type
    {(:git.ref/_commit :as :git.ref/refs) [:git.ref/name
                                           :git.ref/type]}
    {:git.commit/repo [:git.repo/name
                       :git.repo/default-branch
                       {:git.repo/org [:github.org/installation-token
                                       :git.org/name
                                       (:git.org/provider-base-url
                                         :as
                                         :base-url)
                                       :git.provider/url]}]}
    {:git.commit/author [:git.user/name
                         :git.user/login
                         {:git.user/emails [:email.email/address]}]}
    :git.commit/sha
    :git.commit/message
    {(:git.commit/file :as :git.commit/files) [:git.file/path]}
    {(:docker.file/_commit :as :docker.file/docker-files) [:docker.file/path
                                                           {(:docker.file.line/_file :as :lines) [:docker.file.line/number
                                                                                                  :docker.file.line/instruction
                                                                                                  :docker.file.line/args-map
                                                                                                  :docker.file.line/args-array
                                                                                                  :docker.file.line/args-string
                                                                                                  :docker.file.from/tag
                                                                                                  :docker.file.from/digest
                                                                                                  {:docker.file.from/image [:docker.image/digest
                                                                                                                            :docker.image/tags]}
                                                                                                  {:docker.file.from/manifest-list [:docker.manifest-list/digest
                                                                                                                                    :docker.manifest-list/tags]}
                                                                                                  {:docker.file.from/repository [:docker.repository/host
                                                                                                                                 (:docker.repository/repository
                                                                                                                                   :as
                                                                                                                                   :name)]}]}]}])
 :in $ $before-db % ?ctx
 :where
 (attributes-tx ?ctx ?docker-file :docker.file/commit ?commit)

 ;; check if allowlist is enabled
 (get-skill-config-value ?ctx "acceptRequired" false true)
 ;; check that repositories have been selected
 (skill-config-value ?ctx "repoFilter" _)
 
 ;; check repo filter
 [?commit :git.commit/repo ?repo]
 (skill-repo-selected? ?ctx ?repo)]
