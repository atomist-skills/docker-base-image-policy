[:find
 (pull
   ?image
   [:db/id
    :schema/entity-type
    {:docker.image/repository [:docker.repository/host
                               (:docker.repository/repository
                                 :as
                                 :name)]}
    :docker.image/digest
    :docker.image/tags
    {:docker.manifest-list/repository [:docker.repository/host
                                       (:docker.repository/repository
                                         :as
                                         :name)]}
    :docker.manifest-list/digest
    :docker.manifest-list/tags])
 (pull
   ?commit
   [:schema/entity-type
    {(:git.ref/_commit :as :git.ref/refs) [:git.ref/name
                                           :git.ref/type]}
    {:git.commit/repo [:git.repo/name
                       :git.repo/default-branch
                       {:git.repo/org [:github.org/installation-token
                                       :git.org/name
                                       (:git.org/provider-base-url
                                         :as
                                         :base-url)
                                       :git.provider/url]}]}
    {:git.commit/author [:git.user/name
                         :git.user/login
                         {:git.user/emails [:email.email/address]}]}
    :git.commit/sha
    :git.commit/message
    {(:git.commit/file :as :git.commit/files) [:git.file/path]}
    {(:docker.file/_commit :as :docker.file/docker-files) [:docker.file/path
                                                           {(:docker.file.line/_file :as :lines) [:docker.file.line/number
                                                                                                  :docker.file.line/instruction
                                                                                                  :docker.file.line/args-map
                                                                                                  :docker.file.line/args-array
                                                                                                  :docker.file.line/args-string
                                                                                                  :docker.file.from/tag
                                                                                                  :docker.file.from/digest
                                                                                                  {:docker.file.from/image [:docker.image/digest
                                                                                                                            :docker.image/tags]}
                                                                                                  {:docker.file.from/manifest-list [:docker.manifest-list/digest
                                                                                                                                    :docker.manifest-list/tags]}
                                                                                                  {:docker.file.from/repository [:docker.repository/host
                                                                                                                                 (:docker.repository/repository
                                                                                                                                   :as
                                                                                                                                   :name)]}]}]}])
 :in $ $before-db %
 :with ?parameter
 :where
 (or-join
   (tx-config-value "repoFilter" ?parameter)
   (tx-config-value "pinningRequired" ?parameter))

 ;; check pinning is required
 (get-config-value "pinningRequired" true true)

 ;; head commits
 [?ref :git.ref/commit ?commit]
 (is-default-branch? ?ref)

 ;; check repo filter
 [?commit :git.commit/repo ?repo]
 (repo-selected? ?repo)

 ;; check policy hasn't already run
 (or-join [?commit]
   (and [(q (quote [:find (distinct ?check)
                    :in $ ?commit
                    :where
                    [?check-suite :github.checksuite/commit ?commit]
                    [?check-run :github.checkrun/checksuite ?check-suite]
                    [?check-run :github.checkrun/name ?check]])
           $ ?commit)
         [[?checks]]]
     (not (array-contains? ?checks "docker-base-image-policy/pinned")))
   (not [_ :github.checksuite/commit ?commit])
   (and
     [?check-suite :github.checksuite/commit ?commit]
     (not [_ :github.checkrun/checksuite ?check-suite])))

 ;; resolve all images and manifest-list currently used in FROM lines
 [?other-docker-file :docker.file/commit ?commit]
 [?other-from-line :docker.file.line/file ?other-docker-file]
 [?other-from-line :docker.file.line/instruction "FROM"]
 (or-join [?other-from-line ?image]
   (and
     [?other-from-line :docker.file.from/digest ?digest]
     [?image :docker.image/digest ?digest])
   (and
     [?other-from-line :docker.file.from/digest ?digest]
     [?image :docker.manifest-list/digest ?digest])
   (and
     [(missing? $ ?other-from-line :docker.file.from/digest)]
     [(ground "scratch") ?image])
   )]
 
